select stu_no, stu_name, cir_name '동아리명' from circle;
select prof_code "교수코드", prof_name "교수명" from professor where prof_code in (4001, 4002, 4005, 5010);

part10 연습문제
10-2 select stu_no, fee_year, fee_term, ifnull(fee_enter, "NULL VALUE"), fee_total from fee;
10-3 9, 8, 1, 5, 24, 3, 5, 1, 
10-4 select avg(jang_total) from fee;
10-5 select stu_no, sum(jang_total) from fee group by stu_no having sum(jang_total) > (select sum(jang_total) from fee where stu_no = '20191006'); 
10-6 select (max(fee_total) - min(fee_total)), max(fee_price)-min(fee_price) from fee;
10-7 select stu_no, stu_name from student where length(stu_ename) > (select avg(stu_ename) from student);

part11
select substring(stu_no, 1, 4) from student group by substring(stu_no, 1, 4);

select stu_no, count(*), sum(jang_total) from fee group by stu_no;
select stu_no, count(*) from fee where stu_no in (select stu_no from student where stu_name = '박정인') group by stu_no;
select grade, juya, count(*) from student group by grade, juya order by grade, juya;
select stu_no, sum(fee_pay) from fee where stu_no in (select stu_no from student where gender in (1, 3, 5)) group by stu_no having sum(fee_pay) >= 2000000;
select stu_no, sum(fee_pay) from fee group by stu_no having sum(fee_pay) >= all(select sum(fee_pay) from fee group by stu_no);

11-2 select substring(birthday, 1, 4), count(*) from student group by substring(birthday, 1, 4);
11-3 select stu_no, sum(jang_total), avg(jang_total), count(*) from fee group by stu_no;
11-4 select create_year, count(*) 과목수 from subject group by create_year;
11-5 select substring(create_date, 1, 4) as '발령년도', count(*) from professor group by substring(create_date, 1, 4);
11-6 select stu_no, stu_name, post_no, adress // 문제가 이상함
11-7 select stu_no, sum(fee_enter) '등록금 총액' from fee group by stu_no having sum(fee_enter)<1000000;
11-8 select a.stu_no, stu_name, count(sub_code) from attend a left join student s on s.stu_no = a.stu_no group by a.stu_no having count(sub_code)>=2;
11-9 select s.stu_no, stu_name, jang_total from student s left join fee f on s.stu_no = f.stu_no group by f.stu_no having sum(jang_total) >=all(select sum(jang_total) from fee group by stu_no);
11-10 select stu_no, sum(fee_pay) from fee group by stu_no having sum(fee_pay) = (select sum(fee_pay) from fee where stu_no = '20191005');
11-11 select f.stu_no, sum(fee_pay) from attend a left join fee f on a.stu_no = f.stu_no group by f.stu_no;
11-12 select c.stu_no, stu_name, att_year, att_term from attend a left join circle c on c.stu_no = a.stu_no where president = 0 group by c.stu_no;

part 12 연습문제
12-1 select stu_no, stu_name, dept_code, grade from student order by dept_code, grade, stu_no;
12-2 o, x, x, o;
12-3 select (fee_price - jang_total) as '납입금 총액' from fee order by (fee_price - jang_total) asc;

part 13?4? 연습문제
14-3 select stu_no, stu_name from student where stu_no in (select stu_no fro fee where jang_total is not null);
14-4 select stu_no, stu_name from student where stu_no in (select stu_no from attend);
14-5 select stu_no, stu_name from student where stu_no not in (select stu_no from fee) and stu_no not in (select stu_no from attend);

part 15 연습문제

15-2 select s.stu_no, stu_name, ifnull(sum(fee_pay),0) from student s left join fee f on s.stu_no = f.stu_no group by s.stu_no;
15-3 select s.stu_no, s.stu_name, ifnull(cir_name, '미가입') from student s left join circle c on s.stu_no=c.stu_no order by cir_name;

part16 연습문제
16-1 update fee set fee_price=fee_price+100000, fee_total=fee_total+100000, fee_pay=fee_pay+100000 where stu_no in (select stu_no from student where grade=3);
16-2 update fee set fee_enter = fee_enter*1.05, fee_price=fee_price*1.05, fee_total=fee_total*1.05, fee_pay=fee_pay*1.05;
16-3 delete from attend where stu_no='20161001' and att_year = 2016;
16-4 delete from attend where stu_no in (select stu_no from circle);
16-5 delete from student where not stu_name = '유하나' and substring(address, 1, 2) in (select * from(select substring(address, 1, 2) from student where stu_name = '유하나') tmp) and stu_name<>'유하나';

part19 연습문제
18-1  create view v_dungcnt as select stu_no, count(stu_no) cnt from fee group by stu_no;
18-2 select stu_no, stu_name from student where stu_no in (select stu_no from fee where jang_total is not null and fee_div='Y');
18-3 create view v_totals as select stu_no, fee_year, fee_term, jang_total from fee where jang_total >= 1000000;

연습 01/08
테이블 생성 create table extable (no int(3) not null, name varchar(20) not null, passwd varchar(15), gender char(1));
지역 변경
alter table extable add nation varchar(30) default '대한민국';
passwd 드랍
alter table extable drop passwd;
no 프라이머리 키 변경
alter table extable drop no;
alter table extable add primary key(no);
insert into extable values (1, '홍길동', '남', '대한민국'),(2, '에드워드', '남', '미국'),(3, '이소룡', '남', '홍콩');
insert into (no, name, gender) values (4, '신사임당', '여');
select * from extable where nation = '대한민국' order by no desc;
select replace(nation, '대한민국', '한국') from extable;
delete from extable where gender = '여'; 
트랜잭션 저장
start transaction;
insert into extable values (5, '마가렛', '여', '영국');
commit;
select * from extable;
트랜잭션 취소
start transaction;
insert into extable values (6, '로버트', '남', '미국');
rollback;
select * from extable;

01/11
* DB 테이블 목록 보기 - show tables from db이름
* table 구조 보기 - desc 테이블이름
select * from information_schema.tables; = use information_schema; select * from tables; <- DB가 안보여서 감정

create index idx from extable;
create view v as select no, name from extable;

이너조인 - select * from hobby inner join extable on hobby.no = extable.no;
=동일 select * from hobby h, extable e where e.no = h.no;

select * from extable e left join hobby h on h.no = e.no;
select name from extable e where no in (select no from hobby where h_name = '영화');

insert into student values (1, '홍길동');
insert into student values (2, '김길동');
insert into student values (3, '홍길동');